[gd_scene load_steps=8 format=3 uid="uid://b80ch40i04ik7"]

[ext_resource type="PackedScene" uid="uid://j2a53owpff4r" path="res://charater/player/Echo/Echo.tscn" id="1_4vx3m"]
[ext_resource type="Shader" path="res://charater/enimy/charater.gdshader" id="2_6wwoo"]
[ext_resource type="Texture2D" uid="uid://cs3u5d1xya50o" path="res://asset/charater/Julius.png" id="2_appbu"]
[ext_resource type="Script" path="res://charater/player/Julius/Julius.cs" id="2_lrd0s"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_bxj3m"]
resource_local_to_scene = true
shader = ExtResource("2_6wwoo")
shader_parameter/hit = false
shader_parameter/progress = 0.0
shader_parameter/base_direction = Vector2(0, 0)
shader_parameter/pixel_scale = 1.0
shader_parameter/base_dir_rand_factor = 0.2
shader_parameter/regionEnabled = false

[sub_resource type="Shader" id="Shader_uw1d5"]
code = "shader_type canvas_item;

uniform bool hasblock;
uniform vec4 color;
void vertex() {
	// Called for every vertex the material is visible on.
}

void fragment() {
	vec2 uv = UV;
	vec4 tex_color = texture(TEXTURE,uv);
	COLOR.a = COLOR.a*(1.0 - step(0.6,tex_color.r));
	if(hasblock){
		COLOR = vec4(0.3,0.9,0.95,COLOR.a);
	}
	
}

//void light() {
	// Called for every pixel for every light affecting the CanvasItem.
	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_sjc8q"]
resource_local_to_scene = true
shader = SubResource("Shader_uw1d5")
shader_parameter/hasblock = null
shader_parameter/color = Vector4(1, 1, 1, 0)

[node name="Julius" instance=ExtResource("1_4vx3m")]
material = SubResource("ShaderMaterial_bxj3m")
texture = ExtResource("2_appbu")
script = ExtResource("2_lrd0s")

[node name="lifeline" parent="." index="5"]
material = SubResource("ShaderMaterial_sjc8q")
